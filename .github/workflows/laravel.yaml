name: Laravel

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  laravel-tests:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql
        env:
          MYSQL_DATABASE: notify
          MYSQL_USER: aungminzan
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: P@ssw0rd
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.3'
    - uses: actions/checkout@v4
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Wait for MySQL to be ready
      run: |
        sudo apt-get update
        sudo apt-get install -y mysql-client
        until mysql -h 127.0.0.1 -u aungminzan -ppassword -e "SHOW DATABASES;"; do
          echo "Waiting for MySQL..."
          sleep 10
        done
    - name: Create Database
      env:
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: |
        mysql -h $DB_HOST -u $DB_USER -p$DB_PASSWORD -e "CREATE DATABASE IF NOT EXISTS notify_testing;"
        mysql -h $DB_HOST -u $DB_USER -p$DB_PASSWORD -e "GRANT ALL PRIVILEGES ON notify_testing.* TO 'aungminzan';"
    - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
      # env:
      #   DB_CONNECTION: mysql
      #   DB_HOST: 127.0.0.1
      #   DB_PORT: 3306
      #   DB_DATABASE: notify
      #   DB_USERNAME: aungminzan
      #   DB_PASSWORD: password
      run: php artisan test
    - name: Display Laravel Logs
      if: failure()
      run: cat storage/logs/laravel.log

